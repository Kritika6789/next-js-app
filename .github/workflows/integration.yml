name: Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
   
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: "Installing Dependencies"
      run: npm install

    - name: "Build command"
      run: npm run build
  linting:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: "Installing Dependencies"
      run: npm install
    - name: install lint
      run: |
            npm install eslint --save-dev
            npx eslint --init

  
    - name: "lint command"
      run: npm run lint

  unit-tests:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: "Installing Dependencies"
      run: npm install

    - name: "Running test cases"
      run: npm run test
    - name: send slack notification
      uses: slackapi/slack-github-actions@v1.24.0
      with:
        payload: |
          {
            "text":"Build on *{{ github.repository}}* has *${{job.status}}*.\n '${{github.sha}}' by ${{github.actor}}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
  

RunZAPDAST:
  runs-on: ubuntu-latest
  steps:
  - script: |
      echo "Starting OWASP ZAP scan..."
      docker pull owasp/zap2docker-stable
      docker run -t owasp/zap2docker-stable zap-baseline.py \
        -t http://your-staging-url.com \
        -r zap-report.html \
        -x zap-report.xml \
        -J zap-report.json
    displayName: 'Run OWASP ZAP Scan'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: 'zap-report.html'
      artifactName: 'ZAP HTML Report'
    displayName: 'Publish ZAP HTML Report'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: 'zap-report.xml'
      artifactName: 'ZAP XML Report'
    displayName: 'Publish ZAP XML Report'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: 'zap-report.json'
      artifactName: 'ZAP JSON Report'
    displayName: 'Publish ZAP JSON Report'
